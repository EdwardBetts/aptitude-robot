#!/usr/bin/env perl
# vim: set filetype=perl :
use strict;
use warnings;
use 5.010;
use English qw( -no_match_vars );
use Carp;
use autodie;

main() unless caller(0);

sub main {
    use Pod::Usage;
    use Getopt::Long qw( :config auto_help pass_through );

    my $help;
    my $show_cmdline;
    my $config_dir = '/etc/aptitude-robot';
    GetOptions(
        'help'         => \$help,
        'show-cmdline' => \$show_cmdline,
        'config-dir=s' => \$config_dir,
    );
    pod2usage('-verbose' => 2, '-exit_status' => 0) if $help;
    pod2usage() if @ARGV;

    my $aptitude_robot = Aptitude::Robot::Command->new(config_dir => $config_dir);
    die $aptitude_robot->error_msg() . "\n" if $aptitude_robot->error_msg();

    my @command = ();
    push @command, 'echo' if $show_cmdline;
    push @command, $aptitude_robot->command();
    system(@command);
}

BEGIN{
package Aptitude::Robot::Command;
use Any::Moose;

has( 'config_dir' => (
        isa      => 'Str',
        is       => 'ro',
        required => 1,
    )
);
has( 'error_msg'  => (
        isa      => 'Str',
        is       => 'ro',
        init_arg => undef,
        default  => sub {
            my $self = shift;
            if ( -d $self->config_dir() . '/pkglist.d/.' ) {
                return '';
            }
            else {
                return 'Error: ' . $self->config_dir . ' is not a aptitude-robot config directory';
            }
        },
    )
);

sub command {
    my $self = shift;

    return () if $self->error_msg();

    return ('aptitude', '-y', 'full-upgrade');
}

sub pkglist_files {
    my $self = shift;

    return () if $self->error_msg();

    my $cmd = '/bin/run-parts --list ' . $self->config_dir() . '/pkglist.d';
    return split("\n", `$cmd`);
}

no Any::Moose;

1;
}

__END__

=head1 NAME

aptitude-robot - automate package choice management

=head1 SYNOPSIS

aptitude-robot [options]

aptitude-robot --help

=head1 DESCRIPTION

aptitude-robot uses configuration files to install and remove Debian software
packages automatically.  This allows hands-off setup and maintenance of
workstations and servers.  Create package lists in a development environment
and copy the package lists over to the production machines.  aptitude-robot
will then make sure that the packages mentioned in the lists are installed or
removed as indicated.

=head1 OPTIONS

=over 4

=item B<--help>

Prints this page.

=back

=head1 AUTHOR

Elmar S. Heeb <elmar@heebs.ch>

=cut
